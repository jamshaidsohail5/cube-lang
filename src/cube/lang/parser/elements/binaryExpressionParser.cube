use cube.lang
use cube.lang.operatorType
use cube.lang.parser
use cube.lang.syntax
use cube.lang.tokenizer

define binaryExpressionParser[T] as rightDependencyParser[T]
  function create(operator as operator) = me.operator = operator
  function precedence as int = operator.precedence.value

  function parse(parser as dependencyParser[T], left as T, t0 as token) as T
    var right as T =
      parser.parse(precedence
        - if operator.operatorType = RightAssociative then 1 else 0)

    var v as dependencyVisitor[T] = parser.visitor
    v.visit(NodeType.BinaryExpression, operator)
    v.visitDependency(left)
    v.visitLeaf(t0)
    v.visitDependency(right)
    output v.value
  end

  internal
    var operator as operator
  end
end