use cube.lang
use cube.lang.cst
use cube.lang.keyword
use cube.lang.parser
use cube.lang.tokenizer
use cube.lang.tokenizer.tokenStream

define cubeParser
  shared
    function parse(text as string) as element = parse(text, new elementTranslator)
    function parseCst(text as string) as cstNode = parse(text, new cstBuilder)

    do
      map.token(IDENTIFIER)
      map.token(NUMBER)
      map.token(CONSTANT_KEYWORD)
      map.operators(Operator.values)
      map.right(DOT, new dotExpressionParser)
      map.right(EQUAL, new assignParser)
      map.left(LEFT_PARENTHESIS, new bracketedTermParser)
      map.right(LEFT_PARENTHESIS, new functionExpressionParser)
      map.left(IF_KEYWORD, new ifExpressionParser)
    end
  end

  internal
    shared
      let map = new parserDefinition[_]

      function parse[T](text as string, translator as cstTranslator[T]) as T =
        new parser(map as parserDefinition[T], translator, tokenStream(text))
          .parse
    end
  end
end