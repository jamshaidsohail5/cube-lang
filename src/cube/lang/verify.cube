use cube.lang.formatting.format
use cube.lang.parser.cubeParser
use cube.repository

define verify
  function main(args as array[string])
    System.out.println('Verifying...')
    var r1 = new localRepository(repoPath, 'cube')
    var r2 = new localRepository(repoPath, 'tree')
    compare(r1, r2)
    System.out.println('Failed: ' + (total - passed) + ' / ' + total + '.')
  end

  internal
    shared
      var repoPath as string = '../cube-parser/test/data'
      var passed = 0
      var total = 0

      function compare(r1 as localRepository, r2 as localRepository) =
        for each path in r1.sources
          var cube as string = r1.read(path)
          var actual as string = r2.read(path)
          var expected as string = format(dependencyTree(cube))

          if expected.equals(actual) then passed++
          else do
            System.out.println(path)
            System.out.println('Failed   : ' + cube)
            System.out.println('Expected : ' + expected)
            System.out.println('Actual   : ' + actual)
          end

          total++
        end
    end
  end
end