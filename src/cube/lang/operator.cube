use cube.lang.cst.symbol
use cube.lang.operatorType
use cube.lang.precedence
use cube.lang.cst.symbol

enum operator
  Equal(EQUAL, RightAssociative, RelationalPrecedence)
  Add(PLUS, LeftAssociative, AdditivePrecedence)
  Subtract(MINUS, LeftAssociative, AdditivePrecedence)
  Multiply(ASTERISK, LeftAssociative, MultiplicativePrecedence)
  Divide(FORWARD_SLASH, LeftAssociative, MultiplicativePrecedence)
  Power(CARET, RightAssociative, ExponentPrecedence)
  Positive(PLUS, UnaryPrefix, UnaryPrefixPrecedence)
  Negative(MINUS, UnaryPrefix, UnaryPrefixPrecedence)
  BinaryNot(TILDE, UnaryPrefix, UnaryPrefixPrecedence)
  LogicalNot(EXCLAMATION_MARK, UnaryPrefix, UnaryPrefixPrecedence)
  Factorial(EXCLAMATION_MARK, UnaryPostfix, UnaryPostfixPrecedence)

  function operatorType as operatorType = operatorType
  function symbol as symbol = symbol
  function precedence as precedence = precedence

  internal
    var operatorType as operatorType
    var symbol as symbol
    var precedence as precedence

    function create(symbol as symbol, operatorType as operatorType, precedence as precedence)
      me.operatorType = operatorType
      me.symbol = symbol
      me.precedence = precedence
    end
  end
end