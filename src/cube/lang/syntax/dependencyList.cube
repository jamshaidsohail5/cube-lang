define dependencyList as dependencyNode
  function create(nodeType as nodeType) = super(nodeType)

  function add(node as dependencyNode)
    if node = me then error new unsupportedOperationException
    children.add(node)
  end

  function write(writer as dependencyWriter, depth as int)
    var s as stringBuilder = writer.s
    s.append(nodeType.displayName).append(' {')
    var length as int = children.size
    var depth2 as int = depth + 1

    if length = 1 then do
      s.append(char(' '))
      children.get(0).write(writer, depth2)
      s.append(char(' '))
    end
    else
      for each child in children
        writer.lineBreak(depth2)
        child.write(writer, depth2)
      end

    writer.lineBreak(depth)
    s.append(char('}'))
  end

  internal
    let children = new list[dependencyNode]
  end
end